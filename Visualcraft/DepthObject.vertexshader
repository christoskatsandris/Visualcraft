#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 3) in vec3 objectPositions;
layout(location = 4) in float heightMap;

// Values that stay constant for the whole mesh.
uniform mat4 M;
uniform mat4 V;
uniform mat4 P;

uniform int objectID;

void main()
{
	vec4 vertex_position_worldspace = M * vec4(vertexPosition_modelspace, 1.0);

	switch (objectID) {
		case 1: // Tree
			vertex_position_worldspace += vec4(
				objectPositions.x - 2.0,
				-objectPositions.y - heightMap + 1.0,
				-objectPositions.z - 2.0,
				0.0
			);
			break;

		default: // Any other object
			vertex_position_worldspace += vec4(
				objectPositions.x,
				-objectPositions.y - heightMap + 1.0,
				-objectPositions.z,
				0.0
			);
			break;
	}

    gl_Position =  P * V * vertex_position_worldspace;
}